services:
  
  financeservice:
    container_name: financeservice
    image: financeservice
    build:
      context: .
      dockerfile: FinanceService/Dockerfile
    ports:
      - "8901:8080"
    environment:
      - DAPR_HTTP_PORT=3500
      - DAPR_GRPC_PORT=50001  
    networks:
      - fastfoodnet

  financeservice-dapr:
    container_name: financeservice-dapr
    image: "daprio/daprd:1.14.4"
    command: [ "./daprd",
               "--app-id", "financeservice",
               "--app-port", "8080",
               "--placement-host-address", "placement:50005",
               "--resources-path", "/resources",
               "--config", "/config/config.yaml",
               "--sentry-address", "sentry:50001",
               "--log-level", "info",
               "--control-plane-trust-domain", "cluster.local",
               "--enable-mtls"]
    volumes:
      - "./dapr/resources/:/resources"
      - "./dapr/config/:/config"
    env_file:
      - ./dapr/certs/mtls.env
    depends_on:
      financeservice:
        condition: service_started
      redis:
        condition: service_started
      placement:
        condition: service_started
      scheduler:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    network_mode: "service:financeservice"
  
  kitchenservice:
    container_name: kitchenservice
    image: kitchenservice
    build:
      context: .
      dockerfile: KitchenService/Dockerfile
    ports:
      - "8701:8080"
    environment:
      - DAPR_HTTP_PORT=3500
      - DAPR_GRPC_PORT=50001
    networks:
      - fastfoodnet

  kitchenservice-dapr:
    container_name: kitchenservice-dapr
    image: "daprio/daprd:1.14.4"
    command: ["./daprd",
              "--app-id", "kitchenservice",
              "--app-port", "8080",
              "--placement-host-address", "placement:50005",
              "--resources-path", "/resources",
              "--config", "/config/config.yaml",
              "--sentry-address", "sentry:50001",
              "--log-level", "info",
              "--control-plane-trust-domain", "cluster.local",
              "--enable-mtls"]
    volumes:
      - "./dapr/resources/:/resources"
      - "./dapr/config/:/config"
    env_file:
      - ./dapr/certs/mtls.env
    depends_on:
      kitchenservice:
        condition: service_started
      redis:
        condition: service_started
      placement:
        condition: service_started
      scheduler:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    network_mode: "service:kitchenservice"

  orderservice:
    container_name: orderservice
    image: orderservice
    build:
      context: .
      dockerfile: OrderService/Dockerfile
    ports:
      - "8601:8080"
    environment:
      - DAPR_HTTP_PORT=3500
      - DAPR_GRPC_PORT=50001
    networks:
      - fastfoodnet

  orderservice-dapr:
    container_name: orderservice-dapr
    image: "daprio/daprd:1.14.4"
    command: ["./daprd",
              "--app-id", "orderservice",
              "--app-port", "8080",
              "--placement-host-address", "placement:50005",
              "--resources-path", "/resources",
              "--config", "/config/config.yaml",
              "--sentry-address", "sentry:50001",
              "--log-level", "info",
              "--control-plane-trust-domain", "cluster.local",
              "--enable-mtls"]
    volumes:
      - "./dapr/resources/:/resources"
      - "./dapr/config/:/config"
    env_file:
      - ./dapr/certs/mtls.env
    depends_on:
      orderservice:
        condition: service_started
      redis:
        condition: service_started
      placement:
        condition: service_started
      scheduler:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    network_mode: "service:orderservice"

  orderserviceactors:
    container_name: orderserviceactors
    image: orderserviceactors
    build:
      context: .
      dockerfile: OrderService.Actors/Dockerfile
    ports:
      - "8651:8080"
    environment:
      - DAPR_HTTP_PORT=3500
      - DAPR_GRPC_PORT=50001
    networks:
      - fastfoodnet

  orderserviceactors-dapr:
    container_name: orderserviceactors-dapr
    image: "daprio/daprd:1.14.4"
    command: ["./daprd",
              "--app-id", "orderserviceactors",
              "--app-port", "8080",
              "--placement-host-address", "placement:50005",
              "--resources-path", "/resources",
              "--config", "/config/config.yaml",
              "--sentry-address", "sentry:50001",
              "--log-level", "info",
              "--control-plane-trust-domain", "cluster.local",
              "--enable-mtls"]
    volumes:
      - "./dapr/resources/:/resources"
      - "./dapr/config/:/config"
    env_file:
      - ./dapr/certs/mtls.env
    depends_on:
      orderserviceactors:
        condition: service_started
      redis:
        condition: service_started
      placement:
        condition: service_started
      scheduler:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    network_mode: "service:orderserviceactors"

  frontendselfservicepos:
    container_name: frontendselfservicepos
    image: frontendselfservicepos
    build:
      context: .
      dockerfile: FrontendSelfServicePos/Dockerfile
    ports:
      - "8801:8080"
    environment:
      - DAPR_HTTP_PORT=3500
      - DAPR_GRPC_PORT=50001
    networks:
      - fastfoodnet

  frontendselfservicepos-dapr:
    container_name: frontendselfservicepos-dapr
    image: "daprio/daprd:1.14.4"
    command: ["./daprd",
              "--app-id", "frontendselfservicepos",
              "--app-port", "8080",
              "--placement-host-address", "placement:50005",
              "--resources-path", "/resources",
              "--config", "/config/config.yaml",
              "--sentry-address", "sentry:50001",
              "--log-level", "info",
              "--control-plane-trust-domain", "cluster.local",
              "--enable-mtls"]
    volumes:
      - "./dapr/resources/:/resources"
      - "./dapr/config/:/config"
    env_file:
      - ./dapr/certs/mtls.env
    depends_on:
      kitchenservice:
        condition: service_started
      redis:
        condition: service_started
      placement:
        condition: service_started
      scheduler:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    network_mode: "service:kitchenservice"

  redis:
    container_name: redis
    image: "redis:7.2.4"
    ports:
      - "6379:6379"
    networks:
      - fastfoodnet

  placement:
    container_name: placement
    image: "daprio/dapr:1.14.4"
    command: ["./placement",
              "--sentry-address", "sentry:50001",
              "--tls-enabled",
              "--trust-domain", "cluster.local"]
    ports:
      - "50005:50005"
    volumes:
      - "./dapr/certs/:/var/run/secrets/dapr.io/tls"
    networks:
      - fastfoodnet
      
  scheduler:
    image: "daprio/dapr:1.14.4"
    command: [ "./scheduler", 
               "--port", "50007"]
    ports:
      - "50007:50007"
    volumes:
      - "./dapr/certs/:/var/run/secrets/dapr.io/tls"
      - "./dapr/data/scheduler:/data"
    networks:
      - fastfoodnet
        
  sentry:
    image: "daprio/sentry:1.14.4"
    container_name: sentry
    command: ["./sentry",
              "--issuer-credentials", "/certs",
              "--trust-domain", "cluster.local",
              "--config", "/config/config.yaml",
              "--log-level", "info",
    ]
    volumes:
      - "./dapr/certs/:/certs"
      - "./dapr/config/:/config"
    ports:
      - "8082:8080"
    networks:
      - fastfoodnet

  rabbitmq:
    container_name: rabbitmq
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - fastfoodnet
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 5s
      retries: 5
      
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:3.3.0
    ports:
      - "9411:9411"
    networks:
      - fastfoodnet
  
  dapr-dashboard:
    container_name: dapr-dashboard
    image: "daprio/dashboard:0.15.0"
    command: [ "-docker-compose=true",
               "-components-path=/home/nonroot/components",
               "-config-path=/home/nonroot/configuration",
               "-docker-compose-path=/home/nonroot/docker-compose.yml" ]
    ports:
      - "8080:8080"
    volumes:
      - "./dapr/resources/:/home/nonroot/components"
      - "./dapr/config/:/home/nonroot/configuration"
      - "./docker-compose.yml:/home/nonroot/docker-compose.yml"
      - "./dapr/certs:/app/dapr/certs"
    networks:
      - fastfoodnet

networks:
  fastfoodnet: